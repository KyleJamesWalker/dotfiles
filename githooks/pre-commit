#!/bin/bash
if PYENV_VERSION=genv command -v pre-commit > /dev/null; then
    HERE="$(cd "$(dirname "$0")" && pwd)"
    ARGS=(hook-impl --config=.pre-commit-config.yaml --hook-type=pre-commit --hook-dir "$HERE" -- "$@")
    PYENV_VERSION=genv exec pre-commit "${ARGS[@]}"
else
    EXITS=()
    if [[ -f "pyproject.toml" ]]; then
        black --check .
        EXITS+=($?)

        flake8
        EXITS+=($?)
    elif [[ -f "setup.py" || -f "requirements.txt" ]]; then
        flake8
        EXITS+=($?)
    else
        # Unlikely a python project
        EXITS+=(0)
    fi

    # Set array expansion integer seperator to line breaks
    IFS=$'\n'
    # Get the largest exit code
    EXIT_CODE=`echo "${EXITS[*]}" | sort -nr | head -n1`

    if [ $EXIT_CODE = 1 ]; then
        read -p "You're about to commit with a linter error, continue? [y|n] " -n 1 -r < /dev/tty
        echo
        if echo $REPLY | grep -E '^[Yy]$' > /dev/null
        then
            exit 0 # push will execute
        fi
        exit 1 # push will not execute
    elif [ $EXIT_CODE = 127 ]; then
        read -p "You're about to commit with without linter(s) found, continue? [y|n] " -n 1 -r < /dev/tty
        echo
        if echo $REPLY | grep -E '^[Yy]$' > /dev/null
        then
            exit 0 # push will execute
        fi
        exit 1 # push will not execute
    else
        exit 0 # push will execute
    fi

fi
