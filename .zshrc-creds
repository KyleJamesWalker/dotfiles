#!/bin/bash

# Get the value of a secret from the keychain
# Usage: keychain-environment-variable SECRET_ENV_VAR
function keychain-get () {
  [ -n "$1" ] || print "Missing environment variable name"
  security find-generic-password -w -a ${USER} -D "environment variable" -s "${1}"
}

# Set the value of a secret in the keychain
# Usage: set-keychain-environment-variable SECRET_ENV_VAR
function keychain-set () {
  [ -n "$1" ] || print "Missing environment variable name"
  security add-generic-password -U -a ${USER} -D "environment variable" -s "${1}" -w
}

# Reload the encrypted keychain-set commands
function keychain-reload () {
  creds_file=~/.zshrc-creds.enc

  read -s "?Enter Password: " decode_password
  echo "$decode_password" | openssl enc -in ~/.zshrc-creds.enc -d -aes-256-cbc -pass stdin | sh
}

# Edit the encrypted passwords
function keychain-edit () {
  creds_file=~/.zshrc-creds.enc

  edit_tmp=$(mktemp "${TMPDIR:-/tmp/}$(basename $0).XXXXXXXXXXXX")
  read -s "?Enter Password: " ssl_pass

  if [[ -f ${creds_file} ]]; then
    echo "$ssl_pass" | openssl enc -in ${creds_file} -d -aes-256-cbc -pass stdin > ${edit_tmp}
    if [[ $? -ne 0 ]] ; then
      echo "Error: Incorrect password"
      rm ${edit_tmp}
      return -1
    fi
  else
    # File not found, create an empty template
    echo "# Set values for the OSX Keychain" >> ${edit_tmp}
    echo "# Example:" >> ${edit_tmp}
    echo '#   security add-generic-password -U -a ${USER} -D "environment variable" -s "PIP_INDEX_URL" -w "https://first.last:xxx@acme.jfrog.io/acme/api/pypi/pypi/simple"' >> ${edit_tmp}
  fi

  echo "********"

  ${EDITOR:-nano} ${edit_tmp}

  FILESIZE=$(stat -f%z ${edit_tmp})

  if [[ FILESIZE -lt 5 ]]; then
    echo "Empty file detected, aborting..."
    rm ${edit_tmp}
  else
    echo "$ssl_pass" | openssl enc -in ${edit_tmp} -aes-256-cbc -pass stdin > ${creds_file}
  fi

}

# Extract the credentials for environment usage (these must match values set in the keychain)
export HOMEBREW_GITHUB_API_TOKEN=`keychain-get HOMEBREW_GITHUB_API_TOKEN`
export GREN_GITHUB_TOKEN=`keychain-get GREN_GITHUB_TOKEN`
export GITHUB_ACCESS_TOKEN=`keychain-get GITHUB_ACCESS_TOKEN`
export GITHUB_USER=`keychain-get GITHUB_USER`
export GITHUB_PASS=`keychain-get GITHUB_PASS`

export SUMO_USER=`keychain-get SUMO_USER`
export SUMO_PASS=`keychain-get SUMO_PASS`
export SUMO_ACCESS_ID=`keychain-get SUMO_ACCESS_ID`
export SUMO_ACCESS_KEY=`keychain-get SUMO_ACCESS_KEY`
export TWINE_REPOSITORY_URL=`keychain-get TWINE_REPOSITORY_URL`
export TWINE_USERNAME=`keychain-get TWINE_USERNAME`
export TWINE_PASSWORD=`keychain-get TWINE_PASSWORD`
export ARTIFACTORY_USERNAME=`keychain-get ARTIFACTORY_USERNAME`
export ARTIFACTORY_PASSWORD=`keychain-get ARTIFACTORY_PASSWORD`
export ARTIFACTORY_AUTH=`keychain-get ARTIFACTORY_AUTH`
export PIP_INDEX_URL=`keychain-get PIP_INDEX_URL`
export UV_INDEX_URL=`keychain-get PIP_INDEX_URL`

export ACCTS_USER=`keychain-get ACCTS_USER`
export ACCTS_PSWD=`keychain-get ACCTS_PSWD`
export YOUTUBE_API_KEY=`keychain-get YOUTUBE_API_KEY`
